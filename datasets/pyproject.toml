[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "flwr-datasets"
version = "0.0.1"
description = "Flower Datasets"
license = "Apache-2.0"
authors = ["The Flower Authors <hello@flower.dev>"]
readme = "README.md"
homepage = "https://flower.dev"
repository = "https://github.com/adap/flower/datasets"
documentation = "https://flower.dev/docs/datasets"
keywords = [
    "flower",
    "fl",
    "federated learning",
    "federated analytics",
    "federated evaluation",
    "machine learning",
    "dataset",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
packages = [
    { include = "flwr_datasets", from = "./" },
]
exclude = [
    "./**/*_test.py",
]

[tool.poetry.dependencies]
python = "^3.8"
numpy = "^1.21.0"

[tool.poetry.dev-dependencies]
isort = "==5.11.5"
black = { version = "==23.3.0", extras = ["jupyter"] }
docformatter = "==1.7.1"
mypy = "==1.4.0"
pylint = "==2.13.9"
flake8 = "==3.9.2"
pytest = "==7.1.2"
pytest-watch = "==4.2.0"
ruff = "==0.0.277"
types-requests = "==2.28.11.17"

[tool.isort]
line_length = 88
indent = "    "
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
known_first_party = ["flwr_datasets"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]

[tool.pylint."MESSAGES CONTROL"]
disable = "bad-continuation,duplicate-code,too-few-public-methods,useless-import-alias"

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "-qq"
testpaths = [
    "./",
]

[tool.mypy]
plugins = [
    "numpy.typing.mypy_plugin",
]
ignore_missing_imports = true
strict = true

[[tool.mypy.overrides]]
module = [
    "importlib.metadata.*",
    "importlib_metadata.*",
]
follow_imports = "skip"
follow_imports_for_stubs = true
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = "torch.*"
follow_imports = "skip"
follow_imports_for_stubs = true

[tool.docformatter]
wrap-summaries = 88
wrap-descriptions = 88

[tool.ruff]
target-version = "py37"
line-length = 88
select = ["D", "E", "F", "W", "B", "ISC", "C4", "UP"]
fixable = ["D", "E", "F", "W", "B", "ISC", "C4", "UP"]
ignore = ["B024", "B027"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "proto",
]

[tool.ruff.pydocstyle]
convention = "numpy"
